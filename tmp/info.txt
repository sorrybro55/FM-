
Caros Alunos,
nesta mensagem sÃ£o disponibilizados alguns dados para carregarem informaÃ§Ã£o para o trabalho prÃ¡tico.
Iremos gerar mais informaÃ§Ã£o, mas este ficheiro permite-vos testar o processo de carregamento dos dados.

Esta mensagem tem trÃªs items:

1. Uma descriÃ§Ã£o do conteÃºdo e organizaÃ§Ã£o das linhas do ficheiro.
Colocamos apenas a informaÃ§Ã£o que nos parece bÃ¡sica e que se retira do enunciado.
Cada um dos grupos poderÃ¡ (deverÃ¡?) ter, na sua proposta, mais informaÃ§Ã£o para as entidades. Nesses casos devem assumir valores por omissÃ£o para as variÃ¡veis de instÃ¢ncia para as quais nÃ£o fornecemos informaÃ§Ã£o.


2. Um pequeno exemplo de ficheiro, com informaÃ§Ã£o de jogadores, equipas e jogos efetuados, com informaÃ§Ãµes relevantes (porÃ©m, provavelmente, incompletas) para cada uma destas entidades. 


3. Um pedaÃ§o de cÃ³digo que podem utilizar e que lÃª as linhas do ficheiro e seguida faz o parsing das mesmas, e em funÃ§Ã£o do tipo de informaÃ§Ã£o presente chama um mÃ©todo que cria um objecto. A forma como o objecto Ã© criado e a informaÃ§Ã£o dos atributos do mesmo fica ao vosso critÃ©rio alterar. 
O mÃ©todo que faz o parse do ficheiro deverÃ¡ ser invocado no programa principal.
Por exemplo da seguinte forma:

public class OMeuTrabalho {

    public static void main(String[] args){
        
        ...
        Parser p = new Parser();
        p.parse();
        ...
        
    }
    
}

1. 

===============================================================================
Preambulo /Legenda
===============================================================================

--Equipas

Equipa:<NomeEquipa>

--Jogadores (pertencentes Ã  ultima equipa listada antes deles )
--Os valores de Velocidade, ResistÃªncia, Destreza, ImpulsÃ£o, CabeÃ§a, Remate, Passe, Elasticidade, Cruzamento e RecuperaÃ§Ã£o sÃ£o valores entre 0 a 100. 
Guarda-Redes:<Nome>,<NumeroCamisola>,   <Velocidade>,<ResistÃªncia>,<Destreza>,<ImpulsÃ£o>,<CabeÃ§a>,<Remate>,<Passe>,  <Elasticidade>
Defesa:      <Nome>,<NumeroCamisola>,   <Velocidade>,<ResistÃªncia>,<Destreza>,<ImpulsÃ£o>,<CabeÃ§a>,<Remate>,<Passe>
Lateral:     <Nome>,<NumeroCamisola>,   <Velocidade>,<ResistÃªncia>,<Destreza>,<ImpulsÃ£o>,<CabeÃ§a>,<Remate>,<Passe>,  <Cruzamento>
Medio:       <Nome>,<NumeroCamisola>,   <Velocidade>,<ResistÃªncia>,<Destreza>,<ImpulsÃ£o>,<CabeÃ§a>,<Remate>,<Passe>,  <Recuperacao>
Avancado:    <Nome>,<NumeroCamisola>,   <Velocidade>,<ResistÃªncia>,<Destreza>,<ImpulsÃ£o>,<CabeÃ§a>,<Remate>,<Passe>

--Jogos
--Os jogadores titulares de cada equipa sÃ£o representados pelos seus nÃºmeros de camisola. 
--As substituiÃ§Ãµes sÃ£o representadas pelo formato "X->Y", em que X Ã© o jogador que sai e Y Ã© o jogador que entra. 
Jogo:<EquipaCasa>,<EquipaFora>,<ScoreCasa>,<ScoreFora>,<Data>,<JogadoresCasa>,<SubstituicoesCasa>,<JogadoresFora>,<SubstituicoesFora>



2. 

===============================================================================
Dados de LOGS:
===============================================================================

(DisponÃ­vel em ficheiro separado)



3. 

===============================================================================
Exemplo de cÃ³digo
===============================================================================

//De notar que este excerto de cÃ³digo estÃ¡ incompleto a vÃ¡rios nÃ­veis e como tal poderÃ¡ e deverÃ¡ ser melhorado. 
public class Parser {

    (...)

    public void parse(){
        List<String> linhas = lerFicheiro("dados.csv");
        String[] linhaPartida;
        for (String linha : linhas) {
            linhaPartida = linha.split(":", 2);
            switch(linhaPartida[0]){
                case "Guarda-Redes":
                    GuardaRedes j = parseGuardaRedes(linhaPartida[1]);
                    System.out.println(j.toString());
                    break;
                (...)
                default:
                    System.out.println("Linha invÃ¡lida.");
                    break;
            }
        }
        System.out.println("done!");
    }

    public List<String> lerFicheiro(String nomeFich) {
        List<String> lines;
        try { lines = Files.readAllLines(Paths.get(nomeFich), StandardCharsets.UTF_8); }
        catch(IOException exc) { lines = new ArrayList<>(); }
        return lines;
    }


    public GuardaRedes parseGuardaRedes(String input){
        String[] campos = input.split(",");
        String nome = campos[0];
        Int numCamisola = Integer.parseInt(campos[1]);
        Int velocidade = Integer.parseInt(campos[2]);
        (...)
        return new GuardaRedes(...);
    }

}